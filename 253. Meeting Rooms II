# 253. Meeting Rooms II

# Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],...] (si < ei), find the minimum number of conference rooms required.

# Example 1:

# Input: [[0, 30],[5, 10],[15, 20]]
# Output: 2
# Example 2:

# Input: [[7,10],[2,4]]
# Output: 1
class Solution:
    def minMeetingRooms(self, intervals: List[List[int]]) -> int:       
        
        if not intervals:
            return 0            
        intervals  = sorted(intervals, key = lambda x : x[0] )
        rooms = []
        heapq.heappush(rooms, intervals[0][1])
        
        for i in (intervals[1:]):
            if i[0] >= rooms[0]:
                heapq.heappop(rooms)
            heapq.heappush(rooms, i[1])
        return len(rooms)
                
