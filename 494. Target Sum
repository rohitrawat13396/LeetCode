# 494. Target Sum
# Example 1:

# Input: nums is [1, 1, 1, 1, 1], S is 3. 
# Output: 5
# Explanation: 

# -1+1+1+1+1 = 3
# +1-1+1+1+1 = 3
# +1+1-1+1+1 = 3
# +1+1+1-1+1 = 3
# +1+1+1+1-1 = 3

# There are 5 ways to assign symbols to make the sum of nums be target 3.

class Solution:
    def findTargetSumWays(self, nums: List[int], S: int) -> int:
        dp = [0]*2001
        dp[nums[0] + 1000] += 1
        dp[-nums[0] + 1000] += 1
        for i in range(1,len(nums)):
            next = [0]*2001
            for s in range(-1000, 1001):
                if dp[s+1000]>0:
                    next[s+1000+nums[i]] += dp[s+1000]
                    next[s+1000-nums[i]] += dp[s+1000]
            dp = next
        return dp[S+1000] if S <= 1000 and S>=-1000 else 0
