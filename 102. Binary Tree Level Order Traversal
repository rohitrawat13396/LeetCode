# 102. Binary Tree Level Order Traversal

# Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

# For example:
# Given binary tree [3,9,20,null,null,15,7],
#     3
#    / \
#   9  20
#     /  \
#    15   7
# return its level order traversal as:
# [
#   [3],
#   [9,20],
#   [15,7]
# ]

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrder(self, root: TreeNode) -> List[List[int]]:
        result = []
        # self.temp = []
        if not root:
            return result

        def bfs(root, level):
            if not root:
                return
            if len(result)==level:
                result.append([])
            result[level].append(root.val)
                        
            bfs(root.left, level+1)
            bfs(root.right,level+1)
            return result
        
        return bfs(root,0)

            
