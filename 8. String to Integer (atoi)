# 8. String to Integer (atoi)
# Implement atoi which converts a string to an integer.

# The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.

# The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.

# If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.

# If no valid conversion could be performed, a zero value is returned.

class Solution:
    def myAtoi(self, str: str) -> int:
        ans = ''
        flag =0

        for i in str:
            if (i == ' ') and (flag ==0):
                continue 
                
            elif i in ('+','-') and flag ==0:
                ans+= i
                flag = 1
                continue
                
            elif ord(i) in range(48,59):
                ans+= i
                flag = 1
                continue                
            else:
                break
                
        if len(ans) !=0:
            try:
                if int(ans) in range(-2**31,2**31):
                    return int(ans)
                elif int(ans)<0:
                    return -2**31
                else:
                    return (2**31)-1 
            except:
                return 0
        else:
            return 0
