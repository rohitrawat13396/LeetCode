#Given an array of non-negative integers, you are initially positioned at the first index of the array.

#Each element in the array represents your maximum jump length at that position.

#Your goal is to reach the last index in the minimum number of jumps.



class Solution:
    def jump(self, nums: List[int]) -> int:
        
        #greedy algorithm
        n = len(nums)
        if n<2:
            return 0
        max_position = nums[0]
        max_steps = nums[0]
        jumps = 1
        
        for i in range(1,n):
            if max_steps<i:
                jumps +=1
                max_steps = max_position
            max_position = max(max_position, nums[i]+i)
        return jumps
