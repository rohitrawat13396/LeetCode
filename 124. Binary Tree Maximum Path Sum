# 124. Binary Tree Maximum Path Sum

# Example 2:

# Input: [-10,9,20,null,null,15,7]

#    -10
#    / \
#   9  20
#     /  \
#    15   7

# Output: 42

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxPathSum(self, root: TreeNode) -> int:
        
        self.max_sum = float('-inf')
        def max_gain(root):
            if not root:
                return 0
            
#NEGATIVE WILL DECREASE THE MAX_SUM, SO CHECK THE LEFT AND RIGHT GAIN IF IT IS GREATER THAN 0 OR NOT.
            left_gain = max(max_gain(root.left),0)
            right_gain = max(max_gain(root.right),0)

            cur_sum = root.val + left_gain + right_gain

            self.max_sum = max(cur_sum, self.max_sum)                
            
            return root.val + max(left_gain, right_gain)
        
        max_gain(root)
        return self.max_sum
        
        
        
        
