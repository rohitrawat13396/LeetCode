#91. Decode Ways

class Solution:
    def numDecodings(self, s: str) -> int:

        if len(s) == 0 or s[0] == '0':
            return 0
        
        dp = [1, 1] + [0] * (len(s) - 1)
        
        for k, char in enumerate(s[1:], 1):
            dp_k = k + 1
            if char == '0':
                if int(s[k - 1:k + 1]) in range(1,27):
                    dp[dp_k] = dp[dp_k - 2]
                else:
                    return 0
            elif int(s[k - 1:k + 1]) in range(1,27):
                dp[dp_k] = dp[dp_k - 1] + dp[dp_k - 2]
            else:
                dp[dp_k] = dp[dp_k - 1]
        return dp[-1]
