# 34. Find First and Last Position of Element in Sorted Array
# Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.

# Your algorithm's runtime complexity must be in the order of O(log n).

# If the target is not found in the array, return [-1, -1].

# Example 1:

# Input: nums = [5,7,7,8,8,10], target = 8
# Output: [3,4]
# Example 2:

# Input: nums = [5,7,7,8,8,10], target = 6
# Output: [-1,-1]


class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:    
        start = 0 
        end = len(nums)-1
        def twoindex(mid: int):
            left = mid-1
            right =mid+1
            while(left>=0 and nums[left]==target ):
                left-=1
            while(right<=len(nums)-1 and nums[right]==target):
                right+=1
            return [left+1,right-1]
        
        while(start<=end):
            mid = (start + (end-start)//2)
            if nums[mid]==target:
                return twoindex(mid)
            if target > nums[mid]:
                start = mid+1
            else:
                end = mid-1
        return [-1,-1]
        
