# 209. Minimum Size Subarray Sum

# Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum â‰¥ s. If there isn't one, return 0 instead.
class Solution:
    def minSubArrayLen(self, s: int, nums: List[int]) -> int:
        
        if sum(nums)< s:
            return 0
        if s in nums:
            return 1
        win = 0
        min_len = float('inf')
        start = 0
        for i in range(len(nums)):
            win += nums[i]
            while win>=s and start<= i:
                min_len = min(min_len,i+1-start)
                win -= nums[start]
                start +=1
        return min_len
        
