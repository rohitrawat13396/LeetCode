# 92. Reverse Linked List II

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseBetween(self, head: ListNode, m: int, n: int) -> ListNode:
        if not head:
             return None
        l,r = head,head
        stop = False
        def helper(r,m,n):
            nonlocal l, stop
            if n == 1:
                return
            r = r.next
            if m>1:
                l = l.next
            helper(r,m-1,n-1)
            if l==r or r.next == l:
                stop = True
            if not stop:
                l.val,r.val = r.val, l.val
                l = l.next
        helper(r,m,n)
        return head
                
                            
