# 213. House Robber II

# You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have a security system connected, and it will automatically contact the police if two adjacent houses were broken into on the same night.

# Given an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police.

class Solution:
    def rob(self, nums: List[int]) -> int:
         
        def rob_simple(nums):
            pmax, cmax = 0,0
            for n in nums:
                pmax, cmax = cmax, max(pmax+n, cmax)
            return cmax
        
        if len(nums) == 0 or nums is None:
            return 0
        if len(nums)==1:
            return nums[0]
        return max(rob_simple(nums[:-1]), rob_simple(nums[1:]))
