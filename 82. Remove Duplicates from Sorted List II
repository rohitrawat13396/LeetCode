# 82. Remove Duplicates from Sorted List II
# Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

# Return the linked list sorted as well.

# Example 1:

# Input: 1->2->3->3->4->4->5
# Output: 1->2->5
# Example 2:

# Input: 1->1->1->2->3
# Output: 2->3
    
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteDuplicates(self, head: ListNode) -> ListNode:
        p = head
        q = None
        while p and p.next: 
            if p.val == p.next.val: 
                while (p and p.next and p.val == p.next.val): 
                    p = p.next
                p = p.next
                if q is None:
                    head = p
                else:
                    q.next = p
            else:
                q = p
                p = p.next
        return head
                
                
                
            
            
            
        
