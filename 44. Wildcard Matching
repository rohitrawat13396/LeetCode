# 44. Wildcard Matching
class Solution:
    def isMatch(self, s: str, p: str) -> bool:
        s_len, p_len = len(s), len(p)
        
        if s == p or p== '*':
            return True
        if p =='' or s == '':
            return False
        
        dp = [[False]*(s_len+1) for _ in range(p_len+1)]
        dp[0][0] = True
        
        for p_idx in range(1,p_len+1):
            if p[p_idx-1] == '*':
                s_idx = 1
                while not dp[p_idx-1][s_idx-1] and s_idx< s_len+1:
                    s_idx +=1
                
                dp[p_idx][s_idx-1] = dp[p_idx-1][s_idx-1]
                # dp[p_idx][s_idx-1] = True
                while s_idx< s_len+1:
                    dp[p_idx][s_idx] = True
                    s_idx +=1
            elif p[p_idx-1] == '?':
                for s_idx in range(1,s_len+1):
                    dp[p_idx][s_idx] = dp[p_idx-1][s_idx-1]
            else:
                for s_idx in range(1, s_len+1):
                    dp[p_idx][s_idx] = dp[p_idx-1][s_idx-1] and p[p_idx-1] == s[s_idx-1]
        # print(dp)           
        return dp[p_len][s_len]
        
        
                    
                    
                    
