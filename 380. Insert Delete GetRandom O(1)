# 380. Insert Delete GetRandom O(1)
class RandomizedSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.rset = dict()
        self.rlist = []
        

    def insert(self, val: int) -> bool:
        """
        Inserts a value to the set. Returns true if the set did not already contain the specified element.
        """
        if val not in self.rset:
            self.rset[val] = len(self.rlist)
            self.rlist.append(val)
            return True
        else:
            return False
        

    def remove(self, val: int) -> bool:
        """
        Removes a value from the set. Returns true if the set contained the specified element.
        """
        if val not in self.rset:
            return False
        else:
            idx = self.rset[val]
            self.rlist[idx],self.rlist[-1] = self.rlist[-1],self.rlist[idx]
            self.rset[self.rlist[idx]] = idx
            del self.rset[val]
            self.rlist.pop()
            return True
        

    def getRandom(self) -> int:
        """
        Get a random element from the set.
        """
        # idx = random.randrange(0, len(self.rset))
        # return list(self.rset)[idx]
        return random.choice(self.rlist)
        


# Your RandomizedSet object will be instantiated and called as such:
# obj = RandomizedSet()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()
